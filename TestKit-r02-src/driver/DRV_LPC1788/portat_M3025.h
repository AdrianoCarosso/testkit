// ****************************************************************************
// M3025
// ****************************************************************************


const unsigned long PortAtBoot[] = {
    SET_PORT_VAL(PORT_PIO1,17, SET_PIN_OUT_1, SET_PORT_PN | 0), // DOUT_OFFCPU
    SET_PORT_VAL(PORT_PIO2,12, SET_PIN_OUT_0, SET_PORT_PN | 0), // DOUT_LED
    SET_PORT_VAL(PORT_PIO2,13, SET_PIN_OUT_0, SET_PORT_PN | 0), // next led
	
    // COM0
    SET_PORT_VAL(PORT_PIO0, 2, SET_PIN_OUT_1, SET_PORT_PN | 1), // D: COM0-TX SRV LU11_COM
    SET_PORT_VAL(PORT_PIO0, 3, SET_PIN_INPUT, SET_PORT_PN | 1), // D: COM0-RX
    SET_PORT_VAL(PORT_PIO1,15, SET_PIN_OUT_1, SET_PORT_PN | 0), // D: COM0-RTS
    SET_PORT_VAL(PORT_PIO1,16, SET_PIN_INPUT, SET_PORT_PN | 0), // D: COM0-CTS
    // COM1
    SET_PORT_VAL(PORT_PIO2, 0, SET_PIN_OUT_1, SET_PORT_PN | 2), // D: COM1-TX GSM GSM_COM
    SET_PORT_VAL(PORT_PIO2, 1, SET_PIN_INPUT, SET_PORT_PD | 2), // D: COM1-RX
    SET_PORT_VAL(PORT_PIO2, 2, SET_PIN_INPUT, SET_PORT_PN | 2), // D: COM1-CTS
//    SET_PORT_VAL(PORT_PIO0,21, SET_PIN_INPUT, SET_PORT_PN | 1), // D: COM1-RI
    SET_PORT_VAL(PORT_PIO2, 7, SET_PIN_OUT_0, SET_PORT_PD | 2), // D: COM1-RTS
#ifdef USE_EVALUATION_BOARD
    SET_PORT_VAL(PORT_PIO2, 5, SET_PIN_OUT_0, SET_PORT_PN | 0), // D: FREE
#else
    SET_PORT_VAL(PORT_PIO2, 5, SET_PIN_INPUT, SET_PORT_PU | 0), // D: CHARGER
#endif
    // COM2
    SET_PORT_VAL(PORT_PIO2, 8, SET_PIN_OUT_1, SET_PORT_PN | 2), // D: COM2-TX CNS LU2_COM
    SET_PORT_VAL(PORT_PIO2, 9, SET_PIN_INPUT, SET_PORT_PN | 2), // D: COM2-RX
    SET_PORT_VAL(PORT_PIO1,20, SET_PIN_OUT_1, SET_PORT_PN | 0), // D: COM2-RTS
    SET_PORT_VAL(PORT_PIO1,21, SET_PIN_INPUT, SET_PORT_PN | 0), // D: COM2-CTS
    SET_PORT_VAL(PORT_PIO1,29, SET_PIN_OUT_1, SET_PORT_PN | 0), // D: RS485 disable
    // COM3
    SET_PORT_VAL(PORT_PIO4,28, SET_PIN_OUT_1, SET_PORT_PN | 2), // D: COM3-TX WIRELESS
    SET_PORT_VAL(PORT_PIO4,29, SET_PIN_INPUT, SET_PORT_PN | 2), // D: COM3-RX
    SET_PORT_VAL(PORT_PIO1,22, SET_PIN_OUT_1, SET_PORT_PN | 0), // D: COM3-RTS
    SET_PORT_VAL(PORT_PIO1,23, SET_PIN_INPUT, SET_PORT_PN | 0), // D: COM3-CTS
#ifdef USE_COM4_ON_ARM     // LPC1788 has 5 UARTS
    // COM4
    SET_PORT_VAL(PORT_PIO5, 4, SET_PIN_OUT_1, SET_PORT_PN | 4), // D: COM4-TX RX-Crono
    SET_PORT_VAL(PORT_PIO5, 3, SET_PIN_INPUT,               4), // I: COM4-RX
#endif // USE_COM4_ON_ARM

    // TWI0
    SET_PORT_VAL(PORT_PIO0,27, SET_PIN_INPUT,               1), // I: TWI0-SDA
    SET_PORT_VAL(PORT_PIO0,28, SET_PIN_INPUT,               1), // I: TWI0-SCL
#ifdef USE_TWI1_ON_ARM
    // TWI1
    SET_PORT_VAL(PORT_PIO0,19, SET_PIN_INPUT, SET_PORT_OD | 3), // D: TWI1-SDA
    SET_PORT_VAL(PORT_PIO0,20, SET_PIN_INPUT, SET_PORT_OD | 3), // D: TWI1-SCL
#endif // USE_TWI1_ON_ARM

#ifdef USE_TWI2_ON_ARM
// Carica batterie
    SET_PORT_VAL(PORT_PIO0,10, SET_PIN_INPUT, SET_PORT_OD | 2), // D: TWI2-SDA // SET_PORT_OD
    SET_PORT_VAL(PORT_PIO0,11, SET_PIN_INPUT, SET_PORT_OD | 2), // D: TWI2-SCL // SET_PORT_OD
#endif

#ifdef USE_SPI_ON_ARM
	// SPI0
    SET_PORT_VAL(PORT_PIO0,15, SET_PIN_OUT_1, SET_PORT_PN | 2), // D: SPI0-CLK
    SET_PORT_VAL(PORT_PIO0,16, SET_PIN_OUT_1, SET_PORT_PN | 0), // D: SPI0-SSEL
    SET_PORT_VAL(PORT_PIO0,17, SET_PIN_INPUT, SET_PORT_PU | 2), // D: SPI0-MISO
    SET_PORT_VAL(PORT_PIO0,18, SET_PIN_OUT_1, SET_PORT_PN | 2), // D: SPI0-MOSI
#ifdef USE_DOUBLE_SPI
    // SPI1
    SET_PORT_VAL(PORT_PIO0, 6, SET_PIN_OUT_1, SET_PORT_PN | 0), // D: SPI1-SSEL
    SET_PORT_VAL(PORT_PIO0, 7, SET_PIN_OUT_1, (1<<7) | SET_NO_FILTER | SET_PORT_PN | 2), // W: SPI1-CLK
    SET_PORT_VAL(PORT_PIO0, 8, SET_PIN_INPUT, (1<<7) | SET_NO_FILTER | SET_PORT_PU | 2), // W: SPI1-MISO
    SET_PORT_VAL(PORT_PIO0, 9, SET_PIN_OUT_1, (1<<7) | SET_NO_FILTER | SET_PORT_PN | 2), // W: SPI1-MOSI
#endif // USE_DOUBLE_SPI
#endif

    // ADC-DAC
    SET_PORT_VAL(PORT_PIO0,23, SET_PIN_INPUT, SET_PORT_AD | 1), // A: ADC-0
    SET_PORT_VAL(PORT_PIO0,24, SET_PIN_INPUT, SET_PORT_AD | 1), // A: ADC-1
    SET_PORT_VAL(PORT_PIO0,25, SET_PIN_INPUT, SET_PORT_AD | 1), // A: ADC-2
#ifdef USE_DAC
    SET_PORT_VAL(PORT_PIO0,26, SET_PIN_INPUT, SET_PORT_DA | 2), // A: DAC
#else // USE_DAC
    SET_PORT_VAL(PORT_PIO0,26, SET_PIN_INPUT, SET_PORT_AD | 1), // A: ADC-3
#endif // USE_DAC
    SET_PORT_VAL(PORT_PIO0,12, SET_PIN_INPUT, SET_PORT_AD | 3), // A: ADC-6
    SET_PORT_VAL(PORT_PIO0,13, SET_PIN_INPUT, SET_PORT_AD | 3), // A: ADC-7
    SET_PORT_VAL(PORT_PIO1,30, SET_PIN_INPUT, SET_PORT_AD | 3), // A: ADC-4
    SET_PORT_VAL(PORT_PIO1,31, SET_PIN_INPUT, SET_PORT_AD | 3), // A: ADC-5

#if defined(USE_SDRAM) || defined(USE_NANDFLASH_ON_ARM)
    // SDRAM / NAND
    SET_PORT_VAL(PORT_PIO3, 0, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-0		(data)
    SET_PORT_VAL(PORT_PIO3, 1, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-1
    SET_PORT_VAL(PORT_PIO3, 2, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-2
    SET_PORT_VAL(PORT_PIO3, 3, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-3
    SET_PORT_VAL(PORT_PIO3, 4, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-4
    SET_PORT_VAL(PORT_PIO3, 5, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-5
    SET_PORT_VAL(PORT_PIO3, 6, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-6
    SET_PORT_VAL(PORT_PIO3, 7, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-7
#endif // ifdef USE_SDRAM
#ifdef USE_SDRAM
    // SDRAM only
    SET_PORT_VAL(PORT_PIO3, 8, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-8
    SET_PORT_VAL(PORT_PIO3, 9, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-9
    SET_PORT_VAL(PORT_PIO3,10, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-10
    SET_PORT_VAL(PORT_PIO3,11, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-11
    SET_PORT_VAL(PORT_PIO3,12, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-12
    SET_PORT_VAL(PORT_PIO3,13, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-13
    SET_PORT_VAL(PORT_PIO3,14, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-14
    SET_PORT_VAL(PORT_PIO3,15, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-15
    SET_PORT_VAL(PORT_PIO3,16, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-16
    SET_PORT_VAL(PORT_PIO3,17, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-17
    SET_PORT_VAL(PORT_PIO3,18, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-18
#endif // ifdef USE_SDRAM
// #if defined(USE_SDRAM) || defined(USE_NANDFLASH_ON_ARM)
//     SET_PORT_VAL(PORT_PIO3,19, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-19
//     SET_PORT_VAL(PORT_PIO3,20, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-20
// #endif // defined(USE_SDRAM) || defined(USE_NANDFLASH_ON_ARM)
#ifdef USE_SDRAM
    SET_PORT_VAL(PORT_PIO3,21, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-21
    SET_PORT_VAL(PORT_PIO3,22, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-22
    SET_PORT_VAL(PORT_PIO3,23, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-23
    SET_PORT_VAL(PORT_PIO3,24, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-24
    SET_PORT_VAL(PORT_PIO3,25, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-25
    SET_PORT_VAL(PORT_PIO3,26, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-26
    SET_PORT_VAL(PORT_PIO3,27, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-27
    SET_PORT_VAL(PORT_PIO3,28, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-28
    SET_PORT_VAL(PORT_PIO3,29, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-29
    SET_PORT_VAL(PORT_PIO3,30, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-30
    SET_PORT_VAL(PORT_PIO3,31, SET_PIN_INPUT, SET_PORT_PN | 1), // D: D-31

    SET_PORT_VAL(PORT_PIO4, 0, SET_PIN_INPUT, SET_PORT_PN | 1), // D: A-0
    SET_PORT_VAL(PORT_PIO4, 1, SET_PIN_INPUT, SET_PORT_PN | 1), // D: A-1
    SET_PORT_VAL(PORT_PIO4, 2, SET_PIN_INPUT, SET_PORT_PN | 1), // D: A-2
    SET_PORT_VAL(PORT_PIO4, 3, SET_PIN_INPUT, SET_PORT_PN | 1), // D: A-3
    SET_PORT_VAL(PORT_PIO4, 4, SET_PIN_INPUT, SET_PORT_PN | 1), // D: A-4
    SET_PORT_VAL(PORT_PIO4, 5, SET_PIN_INPUT, SET_PORT_PN | 1), // D: A-5
    SET_PORT_VAL(PORT_PIO4, 6, SET_PIN_INPUT, SET_PORT_PN | 1), // D: A-6
    SET_PORT_VAL(PORT_PIO4, 7, SET_PIN_INPUT, SET_PORT_PN | 1), // D: A-7
    SET_PORT_VAL(PORT_PIO4, 8, SET_PIN_INPUT, SET_PORT_PN | 1), // D: A-8
    SET_PORT_VAL(PORT_PIO4, 9, SET_PIN_INPUT, SET_PORT_PN | 1), // D: A-9
    SET_PORT_VAL(PORT_PIO4,10, SET_PIN_INPUT, SET_PORT_PN | 1), // D: A-10
    SET_PORT_VAL(PORT_PIO4,11, SET_PIN_INPUT, SET_PORT_PN | 1), // D: A-11
    SET_PORT_VAL(PORT_PIO4,12, SET_PIN_INPUT, SET_PORT_PN | 1), // D: A-12
    SET_PORT_VAL(PORT_PIO4,13, SET_PIN_INPUT, SET_PORT_PN | 1), // D: A-13
    SET_PORT_VAL(PORT_PIO4,14, SET_PIN_INPUT, SET_PORT_PU | 1), // D: A-14

    SET_PORT_VAL(PORT_PIO2,16, SET_PIN_INPUT, SET_PORT_PN | 1), // D: CAS
    SET_PORT_VAL(PORT_PIO2,17, SET_PIN_INPUT, SET_PORT_PN | 1), // D: RAS
    SET_PORT_VAL(PORT_PIO2,18, SET_PIN_INPUT, SET_PORT_PN | 1), // D: CLK0
    SET_PORT_VAL(PORT_PIO2,20, SET_PIN_INPUT, SET_PORT_PN | 1), // D: dyCS0
    SET_PORT_VAL(PORT_PIO2,24, SET_PIN_INPUT, SET_PORT_PN | 1), // D: CLKE0
    SET_PORT_VAL(PORT_PIO2,28, SET_PIN_INPUT, SET_PORT_PN | 1), // D: DQM0
    SET_PORT_VAL(PORT_PIO2,29, SET_PIN_INPUT, SET_PORT_PN | 1), // D: DQM1
    SET_PORT_VAL(PORT_PIO2,30, SET_PIN_INPUT, SET_PORT_PN | 1), // D: DQM2
    SET_PORT_VAL(PORT_PIO2,31, SET_PIN_INPUT, SET_PORT_PN | 1), // D: DQM3
#endif // USE_SDRAM

#if defined(USE_SDRAM) || defined(USE_NANDFLASH_ON_ARM)
    SET_PORT_VAL(PORT_PIO4,24, SET_PIN_INPUT, SET_PORT_PN | 1), // D: OE
    SET_PORT_VAL(PORT_PIO4,25, SET_PIN_INPUT, SET_PORT_PN | 1), // D: WE
#endif // defined(USE_SDRAM) || defined(USE_NANDFLASH_ON_ARM)

#ifdef USE_NANDFLASH_ON_ARM
    SET_PORT_VAL(PORT_PIO4, 0, SET_PIN_OUT_0, SET_PORT_PN | 0), // D: ALE
    SET_PORT_VAL(PORT_PIO4, 1, SET_PIN_OUT_0, SET_PORT_PN | 0), // D: CLE
//    SET_PORT_VAL(PORT_PIO4,26, SET_PIN_INPUT, SET_PORT_PN | 1), // D: BLS-0
    SET_PORT_VAL(PORT_PIO4,31, SET_PIN_OUT_0, SET_PORT_PN | 1), // D: CS-1
    SET_PORT_VAL(PORT_PIO2,11, SET_PIN_INPUT, SET_PORT_PN | 0), // D: NAND READY
#endif // USE_NANDFLASH_ON_ARM

#ifdef USE_ETHERNET
    SET_PORT_VAL(PORT_PIO1, 0, SET_PIN_INPUT, SET_PORT_PN | 1), // D: ETH TXD0
    SET_PORT_VAL(PORT_PIO1, 1, SET_PIN_INPUT, SET_PORT_PN | 1), // D: ETH TXD1
    SET_PORT_VAL(PORT_PIO1, 4, SET_PIN_INPUT, SET_PORT_PN | 1), // D: ETH TXENA
    SET_PORT_VAL(PORT_PIO1, 8, SET_PIN_INPUT, SET_PORT_PN | 1), // D: ETH CRS
    SET_PORT_VAL(PORT_PIO1, 9, SET_PIN_INPUT, SET_PORT_PN | 1), // D: ETH RXD0
    SET_PORT_VAL(PORT_PIO1,10, SET_PIN_INPUT, SET_PORT_PN | 1), // D: ETH RXD1
    SET_PORT_VAL(PORT_PIO1,14, SET_PIN_INPUT, SET_PORT_PN | 1), // D: ETH RXER
    SET_PORT_VAL(PORT_PIO1,15, SET_PIN_INPUT, SET_PORT_PN | 1), // D: ETH RXCLK
    SET_PORT_VAL(PORT_PIO1,16, SET_PIN_INPUT, SET_PORT_PN | 1), // D: ETH MDC
    SET_PORT_VAL(PORT_PIO1,17, SET_PIN_INPUT, SET_PORT_PN | 1), // D: ETH MDIO
#endif // USE_ETHERNET

#ifdef USE_LCD1788
    // LCD1788
    SET_PORT_VAL(PORT_PIO1,20, SET_PIN_OUT_1, SET_PORT_PN | 7), // D: LCD-10, g0
    SET_PORT_VAL(PORT_PIO1,21, SET_PIN_OUT_1, SET_PORT_PN | 7), // D: LCD-11, g1
    SET_PORT_VAL(PORT_PIO1,22, SET_PIN_OUT_1, SET_PORT_PN | 7), // D: LCD-12, g2
    SET_PORT_VAL(PORT_PIO1,23, SET_PIN_OUT_1, SET_PORT_PN | 7), // D: LCD-13, g3
    SET_PORT_VAL(PORT_PIO1,24, SET_PIN_OUT_1, SET_PORT_PN | 7), // D: LCD-14, g4
    SET_PORT_VAL(PORT_PIO1,25, SET_PIN_OUT_1, SET_PORT_PN | 7), // D: LCD-15, g5

    SET_PORT_VAL(PORT_PIO2,13, SET_PIN_OUT_1, SET_PORT_PN | 7), // D: LCD-19, b0

    SET_PORT_VAL(PORT_PIO1,26, SET_PIN_OUT_1, SET_PORT_PN | 7), // D: LCD-20, b1
    SET_PORT_VAL(PORT_PIO1,27, SET_PIN_OUT_1, SET_PORT_PN | 7), // D: LCD-21, b2
    SET_PORT_VAL(PORT_PIO1,28, SET_PIN_OUT_1, SET_PORT_PN | 7), // D: LCD-22, b3
    SET_PORT_VAL(PORT_PIO1,29, SET_PIN_OUT_1, SET_PORT_PN | 7), // D: LCD-23, b4

    SET_PORT_VAL(PORT_PIO2,12, SET_PIN_OUT_1, SET_PORT_PN | 7), // D: LCD-18, r0

    SET_PORT_VAL(PORT_PIO2, 6, SET_PIN_OUT_1, SET_PORT_PN | 7), // D: LCD-04, r1
    SET_PORT_VAL(PORT_PIO2, 7, SET_PIN_OUT_1, SET_PORT_PN | 7), // D: LCD-05, r2
    SET_PORT_VAL(PORT_PIO2, 8, SET_PIN_OUT_1, SET_PORT_PN | 7), // D: LCD-06, r3
    SET_PORT_VAL(PORT_PIO2, 9, SET_PIN_OUT_1, SET_PORT_PN | 7), // D: LCD-07, r4

//    SET_PORT_VAL(PORT_PIO2, 0, SET_PIN_OUT_1, SET_PORT_PN | 7), // D: LCD-PWR
//    SET_PORT_VAL(PORT_PIO2, 1, SET_PIN_OUT_1, SET_PORT_PN | 7), // D: LCD-LE
    SET_PORT_VAL(PORT_PIO2, 2, SET_PIN_OUT_1, SET_PORT_PN | 7), // D: LCD-DCLK
    SET_PORT_VAL(PORT_PIO2, 3, SET_PIN_OUT_1, SET_PORT_PN | 7), // D: LCD-FP
    SET_PORT_VAL(PORT_PIO2, 4, SET_PIN_OUT_1, SET_PORT_PN | 7), // D: LCD-ENAB_M
    SET_PORT_VAL(PORT_PIO2, 5, SET_PIN_OUT_1, SET_PORT_PN | 7), // D: LCD-LP
#endif // USE_LCD1788

#ifdef USE_FREQT2MAT2
    SET_PORT_VAL(PORT_PIO5, 0, SET_PIN_OUT_0, SET_PORT_PN | 0), // D: T2.MAT2 set at 0 by now
#endif // USE_FREQT2MAT2

#ifdef USE_PWM0A
    SET_PORT_VAL(PORT_PIO1,19, SET_PIN_OUT_0, SET_PORT_PN | 0), // D: MC_0A set at 0 by now
#endif // USE_PWM0A

#ifdef USE_CAN_ON_ARM
    SET_PORT_VAL(PORT_PIO0, 0, SET_PIN_INPUT, SET_PORT_PN | 1), // 
    SET_PORT_VAL(PORT_PIO0, 1, SET_PIN_OUT_0, SET_PORT_PN | 1), // 
    SET_PORT_VAL(PORT_PIO0, 4, SET_PIN_INPUT, SET_PORT_PN | 2), // 
    SET_PORT_VAL(PORT_PIO0, 5, SET_PIN_OUT_0, SET_PORT_PN | 2), // 
#endif
#ifdef USE_TWI2_ON_ARM
// Carica batterie
    SET_PORT_VAL(PORT_PIO0,10, SET_PIN_OUT_0, SET_PORT_OD | 2), // D: TWI2-SDA
    SET_PORT_VAL(PORT_PIO0,11, SET_PIN_OUT_0, SET_PORT_OD | 2), // D: TWI2-SCL
#endif
    SET_PORT_VAL(PORT_PIO0,14, SET_PIN_OUT_0, SET_PORT_PN | 0), // 
    
    SET_PORT_VAL(PORT_PIO0,21, SET_PIN_INPUT, SET_PORT_PN | 0), // 
    SET_PORT_VAL(PORT_PIO0,22, SET_PIN_INPUT, SET_PORT_PU | 0), // 
    
    SET_PORT_VAL(PORT_PIO0,29, SET_PIN_INPUT, SET_PORT_PN | 0), // 
    SET_PORT_VAL(PORT_PIO0,30, SET_PIN_OUT_0, SET_PORT_PN | 0), // 
//USB
    SET_PORT_VAL(PORT_PIO0,31, SET_PIN_OUT_0, SET_PORT_PN | 1), // 
    
    SET_PORT_VAL(PORT_PIO1,10, SET_PIN_INPUT, SET_PORT_PN | 3), //
    SET_PORT_VAL(PORT_PIO1,14, SET_PIN_INPUT, SET_PORT_PU | 3), //

    SET_PORT_VAL(PORT_PIO1,18, SET_PIN_INPUT, SET_PORT_PN | 3), //
    SET_PORT_VAL(PORT_PIO1,19, SET_PIN_OUT_0, SET_PORT_PN | 0), // Output enable of 485 managed by LU11 ( default RX)

    SET_PORT_VAL(PORT_PIO1,24, SET_PIN_OUT_1, SET_PORT_PN | 0), // 
    SET_PORT_VAL(PORT_PIO1,25, SET_PIN_OUT_1, SET_PORT_PN | 0), // 
    SET_PORT_VAL(PORT_PIO1,26, SET_PIN_OUT_1, SET_PORT_PN | 0), // 
    SET_PORT_VAL(PORT_PIO1,27, SET_PIN_OUT_0, SET_PORT_PN | 0), // 
    SET_PORT_VAL(PORT_PIO1,28, SET_PIN_OUT_0, SET_PORT_PN | 4), // 

    SET_PORT_VAL(PORT_PIO2, 3, SET_PIN_INPUT, SET_PORT_PU | 0), //
    SET_PORT_VAL(PORT_PIO2, 4, SET_PIN_INPUT, SET_PORT_PU | 0), //
#ifdef USE_EVALUATION_BOARD
    SET_PORT_VAL(PORT_PIO2, 6, SET_PIN_OUT_0, SET_PORT_PN | 0), // 
#else
    SET_PORT_VAL(PORT_PIO2, 6, SET_PIN_OUT_1, SET_PORT_PN | 0), // Enable RS232
#endif
//    SET_PORT_VAL(PORT_PIO2, 7, SET_PIN_OUT_0, SET_PORT_PN | 0), //
    SET_PORT_VAL(PORT_PIO2,10, SET_PIN_OUT_0, SET_PORT_PN | 0), //

    SET_PORT_VAL(PORT_PIO3,23, SET_PIN_OUT_0, SET_PORT_PN | 0), //
    SET_PORT_VAL(PORT_PIO3,24, SET_PIN_OUT_0, SET_PORT_PN | 0), //
    SET_PORT_VAL(PORT_PIO3,25, SET_PIN_OUT_0, SET_PORT_PN | 0), //
    SET_PORT_VAL(PORT_PIO3,26, SET_PIN_OUT_0, SET_PORT_PN | 0), //
    
    SET_PORT_VAL(PORT_PIO4, 2, SET_PIN_INPUT, SET_PORT_PN | 0), //
    SET_PORT_VAL(PORT_PIO4, 3, SET_PIN_INPUT, SET_PORT_PN | 0), //
    SET_PORT_VAL(PORT_PIO4, 4, SET_PIN_OUT_1, SET_PORT_PN | 0), //
    SET_PORT_VAL(PORT_PIO4, 5, SET_PIN_OUT_1, SET_PORT_PN | 0), //
    SET_PORT_VAL(PORT_PIO4, 6, SET_PIN_OUT_0, SET_PORT_PN | 0), //
    SET_PORT_VAL(PORT_PIO4, 7, SET_PIN_OUT_0, SET_PORT_PN | 0), //
    SET_PORT_VAL(PORT_PIO4, 8, SET_PIN_OUT_0, SET_PORT_PN | 0), //
    SET_PORT_VAL(PORT_PIO4, 9, SET_PIN_OUT_0, SET_PORT_PN | 0), //
#ifdef USE_EVALUATION_BOARD
    SET_PORT_VAL(PORT_PIO4,10, SET_PIN_OUT_0, SET_PORT_PN | 0), //
#else
    SET_PORT_VAL(PORT_PIO4,10, SET_PIN_INPUT, SET_PORT_PU | 0), // INT from CRASH
#endif

    SET_PORT_VAL(PORT_PIO4,11, SET_PIN_INPUT, SET_PORT_PN | 0), //
    SET_PORT_VAL(PORT_PIO4,12, SET_PIN_INPUT, SET_PORT_PN | 0), //
    SET_PORT_VAL(PORT_PIO4,13, SET_PIN_INPUT, SET_PORT_PU | 0), //
    SET_PORT_VAL(PORT_PIO4,14, SET_PIN_INPUT, SET_PORT_PU | 0), //
    SET_PORT_VAL(PORT_PIO4,15, SET_PIN_INPUT, SET_PORT_PU | 0), //
    
    SET_PORT_VAL(PORT_PIO4,30, SET_PIN_OUT_1, SET_PORT_PN | 0), //
    
    SET_PORT_VAL(PORT_PIO5, 0, SET_PIN_OUT_0, SET_PORT_PN | 3), //
    SET_PORT_VAL(PORT_PIO5, 1, SET_PIN_INPUT, SET_PORT_PN | 0), //
    SET_PORT_VAL(PORT_PIO5, 2, SET_PIN_OUT_0, SET_PORT_PN | 0), //

	// stop here
    0
} ;

const unsigned long PortAtOff[] = {
    SET_PORT_VAL(PORT_PIO2,12, SET_PIN_OUT_1, SET_PORT_PN | 0), // DOUT_LED
    // COM0
    SET_PORT_VAL(PORT_PIO0, 2, SET_PIN_INPUT, SET_PORT_PU | 0), // D: COM0-TX
    SET_PORT_VAL(PORT_PIO0, 3, SET_PIN_INPUT, SET_PORT_PU | 0), // D: COM0-RX
    SET_PORT_VAL(PORT_PIO1,15, SET_PIN_INPUT, SET_PORT_PU | 0), // D: COM0-RTS
    SET_PORT_VAL(PORT_PIO1,16, SET_PIN_INPUT, SET_PORT_PU | 0), // D: COM0-CTS
    // COM1
    SET_PORT_VAL(PORT_PIO2, 0, SET_PIN_INPUT, SET_PORT_PU | 2), // D: COM1-TX GSM GSM_COM
    SET_PORT_VAL(PORT_PIO2, 1, SET_PIN_INPUT, SET_PORT_PU | 2), // D: COM1-RX
    SET_PORT_VAL(PORT_PIO2, 2, SET_PIN_INPUT, SET_PORT_PU | 2), // D: COM1-CTS
    SET_PORT_VAL(PORT_PIO2, 7, SET_PIN_INPUT, SET_PORT_PU | 2), // D: COM1-RTS
    SET_PORT_VAL(PORT_PIO2, 5, SET_PIN_INPUT, SET_PORT_PN | 0), // D: FREE INPUT
    // COM2
    SET_PORT_VAL(PORT_PIO2, 8, SET_PIN_INPUT, SET_PORT_PU | 2), // D: COM2-TX CNS LU2_COM
    SET_PORT_VAL(PORT_PIO2, 9, SET_PIN_INPUT, SET_PORT_PU | 2), // D: COM2-RX
    SET_PORT_VAL(PORT_PIO1,20, SET_PIN_INPUT, SET_PORT_PU | 0), // D: COM2-RTS
    SET_PORT_VAL(PORT_PIO1,21, SET_PIN_INPUT, SET_PORT_PU | 0), // D: COM2-CTS
    // COM3
    SET_PORT_VAL(PORT_PIO4,28, SET_PIN_INPUT, SET_PORT_PU | 2), // D: COM3-TX WIRELESS
    SET_PORT_VAL(PORT_PIO4,29, SET_PIN_INPUT, SET_PORT_PU | 2), // D: COM3-RX
    SET_PORT_VAL(PORT_PIO1,22, SET_PIN_INPUT, SET_PORT_PU | 0), // D: COM3-RTS
    SET_PORT_VAL(PORT_PIO1,23, SET_PIN_INPUT, SET_PORT_PU | 0), // D: COM3-CTS
#ifdef USE_COM4_ON_ARM     // LPC1788 has 5 UARTS
    // COM4
    SET_PORT_VAL(PORT_PIO5, 4, SET_PIN_INPUT, SET_PORT_PU | 4), // D: COM4-TX RX-Crono
    SET_PORT_VAL(PORT_PIO5, 3, SET_PIN_INPUT, SET_PORT_PU | 4), // I: COM4-RX
#endif // USE_COM4_ON_ARM

#ifdef USE_TWI_ON_ARM
    // TWI0
    SET_PORT_VAL(PORT_PIO0,27, SET_PIN_OUT_1,               0), // I: TWI0-SDA
    SET_PORT_VAL(PORT_PIO0,28, SET_PIN_OUT_1,               0), // I: TWI0-SCL
#ifdef USE_TWI1_ON_ARM
    // TWI1
    SET_PORT_VAL(PORT_PIO0,19, SET_PIN_INPUT, SET_PORT_PU | 0), // D: TWI1-SDA
    SET_PORT_VAL(PORT_PIO0,20, SET_PIN_INPUT, SET_PORT_PU | 0), // D: TWI1-SCL
#endif // USE_TWI1_ON_ARM
#endif // USE_TWI_ON_ARM

#ifdef USE_SPI_ON_ARM
    // SPI0
    SET_PORT_VAL(PORT_PIO0,15, SET_PIN_OUT_1, SET_PORT_PN | 2), // D: SPI0-CLK
    SET_PORT_VAL(PORT_PIO0,16, SET_PIN_OUT_1, SET_PORT_PN | 0), // D: SPI0-SSEL
    SET_PORT_VAL(PORT_PIO0,17, SET_PIN_INPUT, SET_PORT_PU | 2), // D: SPI0-MISO
    SET_PORT_VAL(PORT_PIO0,18, SET_PIN_OUT_1, SET_PORT_PN | 2), // D: SPI0-MOSI
#ifdef USE_DOUBLE_SPI
    // SPI1
    SET_PORT_VAL(PORT_PIO0, 6, SET_PIN_OUT_1, SET_PORT_PN | 0), // D: SPI1-SSEL
    SET_PORT_VAL(PORT_PIO0, 7, SET_PIN_OUT_1, SET_PORT_PN | 0), // W: SPI1-CLK
    SET_PORT_VAL(PORT_PIO0, 8, SET_PIN_INPUT, SET_PORT_PU | 0), // W: SPI1-MISO
    SET_PORT_VAL(PORT_PIO0, 9, SET_PIN_OUT_1, SET_PORT_PN | 0), // W: SPI1-MOSI
#endif // USE_DOUBLE_SPI
#endif // USE_SPI_ON_ARM

    // ADC-DAC
    SET_PORT_VAL(PORT_PIO0,23, SET_PIN_INPUT, SET_PORT_PD | 0), // A: ADC-0
    SET_PORT_VAL(PORT_PIO0,24, SET_PIN_INPUT, SET_PORT_PD | 0), // A: ADC-1
    SET_PORT_VAL(PORT_PIO0,25, SET_PIN_INPUT, SET_PORT_PD | 0), // A: ADC-2
#ifdef USE_DAC
    SET_PORT_VAL(PORT_PIO0,26, SET_PIN_INPUT, SET_PORT_PD | 0), // A: DAC
#else // USE_DAC
    SET_PORT_VAL(PORT_PIO0,26, SET_PIN_INPUT, SET_PORT_AD | 1), // A: ADC-3
#endif // USE_DAC
    SET_PORT_VAL(PORT_PIO0,13, SET_PIN_INPUT, SET_PORT_PD | 0), // A: ADC-7

#ifdef USE_FREQT2MAT2
    SET_PORT_VAL(PORT_PIO5, 0, SET_PIN_OUT_0, SET_PORT_PN | 0), // D: T2.MAT2
#endif // USE_FREQT2MAT2

#ifdef USE_PWM0A
    SET_PORT_VAL(PORT_PIO1,19, SET_PIN_OUT_0, SET_PORT_PN | 0), // D: MC_0A
#endif // USE_PWM0A

    // stop here
    0
} ;
